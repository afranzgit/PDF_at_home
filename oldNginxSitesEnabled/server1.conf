server {
        server_name server1.hofra.net 192.168.178.54;
        root /var/www/html;
        index index.html index.htm index.nginx-debian.html;

        location ~ /.well-known {
                allow all;
        }

 # Basic Auth to protect the site
 auth_basic "Restricted";
 auth_basic_user_file /etc/nginx/.htpasswd;

 # Change the client side error pages (4xx) to prevent some information disclosure
 error_page 401 403 404 /404.html;

 # First attempt to serve request as file, then as directory,
 # then fall back to displaying a 404.
 
 location / {
          try_files $uri $uri/ =404;
 }
 
 # Deny access to .htaccess files, if Apache's document
 # root concurs with nginx's one
 
 location ~ /\.ht {
          deny all;
 }
    
    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot

include /etc/nginx/snippets/strong-ssl.conf;
    ssl_certificate /etc/letsencrypt/live/cloud.hofra.net/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/cloud.hofra.net/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = server1.hofra.net) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

        listen 80 default_server;
        listen [::]:80 default_server;
    
        server_name server1.hofra.net 192.168.178.54;
    return 404; # managed by Certbot


}

